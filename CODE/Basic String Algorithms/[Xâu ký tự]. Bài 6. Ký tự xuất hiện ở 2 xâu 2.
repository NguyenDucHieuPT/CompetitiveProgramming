#include <bits/stdc++.h>
using namespace std;
#define fi first
#define se second
#define BIT(x, i) ((x) & (1 << (i)))
#define fastio ios_base::sync_with_stdio(false); cin.tie(NULL);
#define file(name)  if (fopen (name".inp", "r") ) { freopen (name".inp", "r", stdin); freopen (name".out", "w", stdout); } else freopen (name".inp", "w", stdin);
#define FL(i,l,r) for (int i=l;i<r;i++)
#define FE(i,l,r) for (int i=l;i<=r;i++)
#define FR(i,r,l) for (int i=r-1;i>=l;i--)
#define FT(x,a) for (auto &x: a)
#define ALL(v) (v).begin(), (v).end()
#define sz(x) (int)(x).size()
#define HaCam int main(void)

using ll = long long;
using ld = long double;
using st = string;
using pii = pair<int, int>;
using vi = vector<int>;

//author Hieu Soc
//school THPT Hung Hoa

const int INF = 1e9 + 1;
const ll INFF = 1e18 + 1;
const int MaxN = 1e6 + 1;
const int MOD = 1e9 + 7;

namespace solve
{
	void process(void)
	{
		string str1, str2, Result1, Result2;
		getline(cin, str1);
		getline(cin, str2);
		pair<bool, bool> cnt[256] = {};
		FL(i, 0, sz(str1))
			cnt[str1[i]].first = 1;
		FL(i, 0, sz(str2))
			cnt[str2[i]].second = 1;
		FE(i, 0, 255)
			if (cnt[i].first && !cnt[i].second) 
				cout << (char) i;
		cout << endl;
		FE(i, 0, 255)
			if (!cnt[i].first && cnt[i].second) 
				cout <<(char) i;
	}
}


HaCam
{
    fastio;
    file("B");
    solve::process();

    
    return 0;
}