#include <bits/stdc++.h>
using namespace std;
#define fi first
#define se second
#define BIT(x, i) ((x) & (1 << (i)))
#define fastio ios_base::sync_with_stdio(false); cin.tie(NULL);
#define file(name)  if (fopen (name".inp", "r") ) { freopen (name".inp", "r", stdin); freopen (name".out", "w", stdout); } else freopen (name".inp", "w", stdin);
#define FL(i,l,r) for (int i=l;i<r;i++)
#define FE(i,l,r) for (int i=l;i<=r;i++)
#define FR(i,r,l) for (int i=r-1;i>=l;i--)
#define FT(x,a) for (auto &x: a)
#define ALL(v) (v).begin(), (v).end()
#define sz(x) (int)(x).size()
#define HaCam int main(void)

using ll = long long;
using ld = long double;
using st = string;
using pii = pair<int, int>;
using vi = vector<int>;

//author Hieu Soc
//school THPT Hung Hoa

const int INF = 1e9 + 1;
const ll INFF = 1e18 + 1;
const int MaxN = 1e6 + 1;
const ll MOD = 1e9 + 7;

namespace solve
{
	int LastDigit(string str)
	{
		int n = str[sz(str) - 1] - '0';
		if (n == 0)
			return 1;
		int POW[4] = {6, 8, 4, 2};
		return POW[n % 4];
	}
	void process(void)
	{
		string n;
		cin >> n;
		cout << LastDigit(n);
	}
	
}


HaCam
{
    fastio;
    file("B");
    solve::process();

    
    return 0;
}