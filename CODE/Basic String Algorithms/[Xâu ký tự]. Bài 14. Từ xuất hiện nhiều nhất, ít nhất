#include <bits/stdc++.h>
using namespace std;
#define fi first
#define se second
#define BIT(x, i) ((x) & (1 << (i)))
#define fastio ios_base::sync_with_stdio(false); cin.tie(NULL);
#define file(name)  if (fopen (name".inp", "r") ) { freopen (name".inp", "r", stdin); freopen (name".out", "w", stdout); } else freopen (name".inp", "w", stdin);
#define FL(i,l,r) for (int i=l;i<r;i++)
#define FE(i,l,r) for (int i=l;i<=r;i++)
#define FR(i,r,l) for (int i=r-1;i>=l;i--)
#define FT(x,a) for (auto &x: a)
#define ALL(v) (v).begin(), (v).end()
#define sz(x) (int)(x).size()
#define HaCam int main(void)

using ll = long long;
using ld = long double;
using st = string;
using pii = pair<int, int>;
using vi = vector<int>;

//author Hieu Soc
//school THPT Hung Hoa

const int INF = 1e9 + 1;
const ll INFF = 1e18 + 1;
const int MaxN = 1e6 + 1;
const int MOD = 1e9 + 7;

namespace solve
{
	void process(void)
	{
		string str;
		getline(cin, str);
		str.push_back(' ');
		map <string, int> cnt;
		string word = "";
		FL(i, 0, sz(str))
		{
			if(str[i] == ' ')
			{	
				cnt[word]++;
				word = "";
			}
			else
				word.push_back(str[i]);
		}
		pair <string, int> Max = {"", -INF}, Min = {"", INF};
		for(map<string, int> :: iterator x = cnt.begin(); x != cnt.end(); x++)
		{
			if ((*x).second >= Max.second)
				Max = {(*x).first, (*x).second};
			if ((*x).second <= Min.second)
				Min = {(*x).first, (*x).second};
		}
		cout << Max.first << " " << Max.second << endl;
		cout << Min.first << " " << Min.second << endl;
	}
}


HaCam
{
    fastio;
    file("B");
    solve::process();

    
    return 0;
}