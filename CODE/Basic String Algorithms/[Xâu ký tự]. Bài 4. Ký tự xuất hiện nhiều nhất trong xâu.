#include <bits/stdc++.h>
using namespace std;
#define fi first
#define se second
#define BIT(x, i) ((x) & (1 << (i)))
#define fastio ios_base::sync_with_stdio(false); cin.tie(NULL);
#define file(name)  if (fopen (name".inp", "r") ) { freopen (name".inp", "r", stdin); freopen (name".out", "w", stdout); } else freopen (name".inp", "w", stdin);
#define FL(i,l,r) for (int i=l;i<r;i++)
#define FE(i,l,r) for (int i=l;i<=r;i++)
#define FR(i,r,l) for (int i=r-1;i>=l;i--)
#define FT(x,a) for (auto &x: a)
#define ALL(v) (v).begin(), (v).end()
#define sz(x) (int)(x).size()
#define HaCam int main(void)

using ll = long long;
using ld = long double;
using st = string;
using pii = pair<int, int>;
using vi = vector<int>;

//author Hieu Soc
//school THPT Hung Hoa

const int INF = 1e9 + 1;
const ll INFF = 1e18 + 1;
const int MaxN = 1e6 + 1;
const int MOD = 1e9 + 7;

namespace solve
{
	void process(void)
	{
		string str;
		getline(cin, str);
		map <char, int> cnt;
		pair <char, int> ch_min = {' ',INF}, ch_max= {' ',-INF};
		for(int i = 0; i < (int) str.size(); i++)
		{
			cnt[str[i]]++;
			int k = cnt[str[i]];
			if (k > ch_max.second || (k == ch_max.second && str[i] > ch_max.first))
				ch_max = {str[i], k};
			if (k < ch_min.second || (k == ch_min.second && str[i] > ch_min.first))
				ch_min = {str[i], k};
		}
		cout << ch_max.first << " " << ch_max.second << endl;
		cout << ch_min.first << " " << ch_min.second;
		
	}
}


HaCam
{
    fastio;
    file("B");
    solve::process();

    
    return 0;
}