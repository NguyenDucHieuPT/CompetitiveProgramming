/*Cho một bàn cờ 8 x 8, mỗi ô có một giá trị A[i][j] nhất định (0 ≤ A[i][j] ≤ 100),
tương ứng với điểm số đạt được nếu như bạn đặt một quân cờ vào đó. Nhiệm vụ
của bạn là đặt 8 quân hậu lên bàn cờ, sao cho không có 2 quân nào ăn nhau, và
số điểm đạt được là lớn nhất.*/

namespace solve
{
	int a[9][9], n, MaxResult = 0, SumCurr = 0;
	void enter()
	{
		n = 8;
		FE(i, 1, n)
			FE(j, 1, n)
				cin >> a[i][j];
	}
	void printf_result()
	{
		cout << MaxResult;
	}
	void update_max_result()
	{
		MaxResult = max(MaxResult, SumCurr);
	}
	int IsInCol[13], IsInDiag1[26], IsInDiag2[26], curr = 0;
	void branch_and_bound(int curRow)
	{
		FE(curCol, 1, n)
		{
			int curDiag1 = curCol + curRow,
				curDiag2 = curCol - curRow + 13;

			if (IsInCol[curCol] || IsInDiag1[curDiag1] || IsInDiag2[curDiag2])
				continue;

			curr++;
			SumCurr += a[curRow][curCol];
			IsInCol[curCol] = 1;
			IsInDiag1[curDiag1] = 1;
			IsInDiag2[curDiag2] = 1;

			if (curr == n)
				update_max_result();
			else
				branch_and_bound(curRow + 1);

			curr--;
			SumCurr -= a[curRow][curCol];
			IsInCol[curCol] = 0;
			IsInDiag1[curDiag1] = 0;
			IsInDiag2[curDiag2] = 0;
		}
	}
	void process(void)
	{
		enter();
		memset(IsInCol, 0, sizeof(IsInCol));
		memset(IsInDiag1, 0, sizeof(IsInDiag1));
		memset(IsInDiag2, 0, sizeof(IsInDiag2));
		branch_and_bound(1);
		printf_result();
	}
}